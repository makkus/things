/*
 * Things
 *
 * Copyright (c) 2014, Markus Binsteiner. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 3.0 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library.
 */

/**
 * This class is generated by jOOQ
 */
package projectdb.tables.records;

/**
 * This class is generated by jOOQ.
 * <p>
 * Maps researchers onto a project
 */
@javax.annotation.Generated(value = {"http://www.jooq.org", "3.3.2"},
        comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({"all", "unchecked", "rawtypes"})
public class ResearcherProjectRecord extends org.jooq.impl.TableRecordImpl<projectdb.tables.records.ResearcherProjectRecord> implements org.jooq.Record4<java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.String> {

    private static final long serialVersionUID = 1269315102;

    /**
     * Create a detached ResearcherProjectRecord
     */
    public ResearcherProjectRecord() {
        super(projectdb.tables.ResearcherProject.RESEARCHER_PROJECT);
    }

    /**
     * Create a detached, initialised ResearcherProjectRecord
     */
    public ResearcherProjectRecord(java.lang.Integer researcherid, java.lang.Integer projectid, java.lang.Integer researcherroleid, java.lang.String notes) {
        super(projectdb.tables.ResearcherProject.RESEARCHER_PROJECT);

        setValue(0, researcherid);
        setValue(1, projectid);
        setValue(2, researcherroleid);
        setValue(3, notes);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.Field<java.lang.Integer> field1() {
        return projectdb.tables.ResearcherProject.RESEARCHER_PROJECT.RESEARCHERID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.Field<java.lang.Integer> field2() {
        return projectdb.tables.ResearcherProject.RESEARCHER_PROJECT.PROJECTID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.Field<java.lang.Integer> field3() {
        return projectdb.tables.ResearcherProject.RESEARCHER_PROJECT.RESEARCHERROLEID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.Field<java.lang.String> field4() {
        return projectdb.tables.ResearcherProject.RESEARCHER_PROJECT.NOTES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.Row4<java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.String> fieldsRow() {
        return (org.jooq.Row4) super.fieldsRow();
    }

    /**
     * Getter for <code>projectdb.researcher_project.notes</code>.
     */
    public java.lang.String getNotes() {
        return (java.lang.String) getValue(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * Getter for <code>projectdb.researcher_project.projectId</code>.
     */
    public java.lang.Integer getProjectid() {
        return (java.lang.Integer) getValue(1);
    }

    /**
     * Getter for <code>projectdb.researcher_project.researcherId</code>.
     */
    public java.lang.Integer getResearcherid() {
        return (java.lang.Integer) getValue(0);
    }

    /**
     * Getter for <code>projectdb.researcher_project.researcherRoleId</code>.
     */
    public java.lang.Integer getResearcherroleid() {
        return (java.lang.Integer) getValue(2);
    }

    /**
     * Setter for <code>projectdb.researcher_project.notes</code>.
     */
    public void setNotes(java.lang.String value) {
        setValue(3, value);
    }

    /**
     * Setter for <code>projectdb.researcher_project.projectId</code>.
     */
    public void setProjectid(java.lang.Integer value) {
        setValue(1, value);
    }

    /**
     * Setter for <code>projectdb.researcher_project.researcherId</code>.
     */
    public void setResearcherid(java.lang.Integer value) {
        setValue(0, value);
    }

    /**
     * Setter for <code>projectdb.researcher_project.researcherRoleId</code>.
     */
    public void setResearcherroleid(java.lang.Integer value) {
        setValue(2, value);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public java.lang.Integer value1() {
        return getResearcherid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResearcherProjectRecord value1(java.lang.Integer value) {
        setResearcherid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public java.lang.Integer value2() {
        return getProjectid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResearcherProjectRecord value2(java.lang.Integer value) {
        setProjectid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public java.lang.Integer value3() {
        return getResearcherroleid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResearcherProjectRecord value3(java.lang.Integer value) {
        setResearcherroleid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public java.lang.String value4() {
        return getNotes();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ResearcherProjectRecord value4(java.lang.String value) {
        setNotes(value);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public ResearcherProjectRecord values(java.lang.Integer value1, java.lang.Integer value2, java.lang.Integer value3, java.lang.String value4) {
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.Row4<java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.String> valuesRow() {
        return (org.jooq.Row4) super.valuesRow();
    }
}
