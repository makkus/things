/**
 * This class is generated by jOOQ
 */
package projectdb.tables.daos;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value = {"http://www.jooq.org", "3.3.2"},
        comments = "This class is generated by jOOQ")
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class ProjectreviewDao extends org.jooq.impl.DAOImpl<projectdb.tables.records.ProjectreviewRecord, projectdb.tables.pojos.Projectreview, Integer> {

    /**
     * Create a new ProjectreviewDao without any panAuditConfiguration
     */
    public ProjectreviewDao() {
        super(projectdb.tables.Projectreview.PROJECTREVIEW, projectdb.tables.pojos.Projectreview.class);
    }

    /**
     * Create a new ProjectreviewDao with an attached panAuditConfiguration
     */
    public ProjectreviewDao(org.jooq.Configuration configuration) {
        super(projectdb.tables.Projectreview.PROJECTREVIEW, projectdb.tables.pojos.Projectreview.class, configuration);
    }

    /**
     * Fetch records that have <code>adviserId IN (values)</code>
     */
    public java.util.List<projectdb.tables.pojos.Projectreview> fetchByAdviserid(Integer... values) {
        return fetch(projectdb.tables.Projectreview.PROJECTREVIEW.ADVISERID, values);
    }

    /**
     * Fetch records that have <code>date IN (values)</code>
     */
    public java.util.List<projectdb.tables.pojos.Projectreview> fetchByDate(String... values) {
        return fetch(projectdb.tables.Projectreview.PROJECTREVIEW.DATE, values);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public java.util.List<projectdb.tables.pojos.Projectreview> fetchById(Integer... values) {
        return fetch(projectdb.tables.Projectreview.PROJECTREVIEW.ID, values);
    }

    /**
     * Fetch records that have <code>notes IN (values)</code>
     */
    public java.util.List<projectdb.tables.pojos.Projectreview> fetchByNotes(String... values) {
        return fetch(projectdb.tables.Projectreview.PROJECTREVIEW.NOTES, values);
    }

    /**
     * Fetch records that have <code>projectId IN (values)</code>
     */
    public java.util.List<projectdb.tables.pojos.Projectreview> fetchByProjectid(Integer... values) {
        return fetch(projectdb.tables.Projectreview.PROJECTREVIEW.PROJECTID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public projectdb.tables.pojos.Projectreview fetchOneById(Integer value) {
        return fetchOne(projectdb.tables.Projectreview.PROJECTREVIEW.ID, value);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(projectdb.tables.pojos.Projectreview object) {
        return object.getId();
    }
}
