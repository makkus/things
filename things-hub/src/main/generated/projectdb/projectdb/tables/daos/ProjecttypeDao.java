/**
 * This class is generated by jOOQ
 */
package projectdb.tables.daos;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value = {"http://www.jooq.org", "3.3.2"},
        comments = "This class is generated by jOOQ")
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class ProjecttypeDao extends org.jooq.impl.DAOImpl<projectdb.tables.records.ProjecttypeRecord, projectdb.tables.pojos.Projecttype, Integer> {

    /**
     * Create a new ProjecttypeDao without any panAuditConfiguration
     */
    public ProjecttypeDao() {
        super(projectdb.tables.Projecttype.PROJECTTYPE, projectdb.tables.pojos.Projecttype.class);
    }

    /**
     * Create a new ProjecttypeDao with an attached panAuditConfiguration
     */
    public ProjecttypeDao(org.jooq.Configuration configuration) {
        super(projectdb.tables.Projecttype.PROJECTTYPE, projectdb.tables.pojos.Projecttype.class, configuration);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public java.util.List<projectdb.tables.pojos.Projecttype> fetchById(Integer... values) {
        return fetch(projectdb.tables.Projecttype.PROJECTTYPE.ID, values);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public java.util.List<projectdb.tables.pojos.Projecttype> fetchByName(String... values) {
        return fetch(projectdb.tables.Projecttype.PROJECTTYPE.NAME, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public projectdb.tables.pojos.Projecttype fetchOneById(Integer value) {
        return fetchOne(projectdb.tables.Projecttype.PROJECTTYPE.ID, value);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(projectdb.tables.pojos.Projecttype object) {
        return object.getId();
    }
}
