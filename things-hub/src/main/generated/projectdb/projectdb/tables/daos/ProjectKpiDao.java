/**
 * This class is generated by jOOQ
 */
package projectdb.tables.daos;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value = {"http://www.jooq.org", "3.3.2"},
        comments = "This class is generated by jOOQ")
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class ProjectKpiDao extends org.jooq.impl.DAOImpl<projectdb.tables.records.ProjectKpiRecord, projectdb.tables.pojos.ProjectKpi, Integer> {

    /**
     * Create a new ProjectKpiDao without any panAuditConfiguration
     */
    public ProjectKpiDao() {
        super(projectdb.tables.ProjectKpi.PROJECT_KPI, projectdb.tables.pojos.ProjectKpi.class);
    }

    /**
     * Create a new ProjectKpiDao with an attached panAuditConfiguration
     */
    public ProjectKpiDao(org.jooq.Configuration configuration) {
        super(projectdb.tables.ProjectKpi.PROJECT_KPI, projectdb.tables.pojos.ProjectKpi.class, configuration);
    }

    /**
     * Fetch records that have <code>adviserId IN (values)</code>
     */
    public java.util.List<projectdb.tables.pojos.ProjectKpi> fetchByAdviserid(Integer... values) {
        return fetch(projectdb.tables.ProjectKpi.PROJECT_KPI.ADVISERID, values);
    }

    /**
     * Fetch records that have <code>code IN (values)</code>
     */
    public java.util.List<projectdb.tables.pojos.ProjectKpi> fetchByCode(Integer... values) {
        return fetch(projectdb.tables.ProjectKpi.PROJECT_KPI.CODE, values);
    }

    /**
     * Fetch records that have <code>date IN (values)</code>
     */
    public java.util.List<projectdb.tables.pojos.ProjectKpi> fetchByDate(String... values) {
        return fetch(projectdb.tables.ProjectKpi.PROJECT_KPI.DATE, values);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public java.util.List<projectdb.tables.pojos.ProjectKpi> fetchById(Integer... values) {
        return fetch(projectdb.tables.ProjectKpi.PROJECT_KPI.ID, values);
    }

    /**
     * Fetch records that have <code>kpiId IN (values)</code>
     */
    public java.util.List<projectdb.tables.pojos.ProjectKpi> fetchByKpiid(Integer... values) {
        return fetch(projectdb.tables.ProjectKpi.PROJECT_KPI.KPIID, values);
    }

    /**
     * Fetch records that have <code>notes IN (values)</code>
     */
    public java.util.List<projectdb.tables.pojos.ProjectKpi> fetchByNotes(String... values) {
        return fetch(projectdb.tables.ProjectKpi.PROJECT_KPI.NOTES, values);
    }

    /**
     * Fetch records that have <code>projectId IN (values)</code>
     */
    public java.util.List<projectdb.tables.pojos.ProjectKpi> fetchByProjectid(Integer... values) {
        return fetch(projectdb.tables.ProjectKpi.PROJECT_KPI.PROJECTID, values);
    }

    /**
     * Fetch records that have <code>value IN (values)</code>
     */
    public java.util.List<projectdb.tables.pojos.ProjectKpi> fetchByValue(Double... values) {
        return fetch(projectdb.tables.ProjectKpi.PROJECT_KPI.VALUE, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public projectdb.tables.pojos.ProjectKpi fetchOneById(Integer value) {
        return fetchOne(projectdb.tables.ProjectKpi.PROJECT_KPI.ID, value);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(projectdb.tables.pojos.ProjectKpi object) {
        return object.getId();
    }
}
