/**
 * This class is generated by jOOQ
 */
package projectdb.tables.daos;

/**
 * This class is generated by jOOQ.
 * <p>
 * Holds the main information about projects
 */
@javax.annotation.Generated(value = {"http://www.jooq.org", "3.3.2"},
        comments = "This class is generated by jOOQ")
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class ProjectDao extends org.jooq.impl.DAOImpl<projectdb.tables.records.ProjectRecord, projectdb.tables.pojos.Project, Integer> {

    /**
     * Create a new ProjectDao without any panAuditConfiguration
     */
    public ProjectDao() {
        super(projectdb.tables.Project.PROJECT, projectdb.tables.pojos.Project.class);
    }

    /**
     * Create a new ProjectDao with an attached panAuditConfiguration
     */
    public ProjectDao(org.jooq.Configuration configuration) {
        super(projectdb.tables.Project.PROJECT, projectdb.tables.pojos.Project.class, configuration);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public java.util.List<projectdb.tables.pojos.Project> fetchByDescription(String... values) {
        return fetch(projectdb.tables.Project.PROJECT.DESCRIPTION, values);
    }

    /**
     * Fetch records that have <code>endDate IN (values)</code>
     */
    public java.util.List<projectdb.tables.pojos.Project> fetchByEnddate(String... values) {
        return fetch(projectdb.tables.Project.PROJECT.ENDDATE, values);
    }

    /**
     * Fetch records that have <code>hostInstitution IN (values)</code>
     */
    public java.util.List<projectdb.tables.pojos.Project> fetchByHostinstitution(String... values) {
        return fetch(projectdb.tables.Project.PROJECT.HOSTINSTITUTION, values);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public java.util.List<projectdb.tables.pojos.Project> fetchById(Integer... values) {
        return fetch(projectdb.tables.Project.PROJECT.ID, values);
    }

    /**
     * Fetch records that have <code>lastModified IN (values)</code>
     */
    public java.util.List<projectdb.tables.pojos.Project> fetchByLastmodified(java.sql.Timestamp... values) {
        return fetch(projectdb.tables.Project.PROJECT.LASTMODIFIED, values);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public java.util.List<projectdb.tables.pojos.Project> fetchByName(String... values) {
        return fetch(projectdb.tables.Project.PROJECT.NAME, values);
    }

    /**
     * Fetch records that have <code>nextFollowUpDate IN (values)</code>
     */
    public java.util.List<projectdb.tables.pojos.Project> fetchByNextfollowupdate(String... values) {
        return fetch(projectdb.tables.Project.PROJECT.NEXTFOLLOWUPDATE, values);
    }

    /**
     * Fetch records that have <code>nextReviewDate IN (values)</code>
     */
    public java.util.List<projectdb.tables.pojos.Project> fetchByNextreviewdate(String... values) {
        return fetch(projectdb.tables.Project.PROJECT.NEXTREVIEWDATE, values);
    }

    /**
     * Fetch records that have <code>notes IN (values)</code>
     */
    public java.util.List<projectdb.tables.pojos.Project> fetchByNotes(String... values) {
        return fetch(projectdb.tables.Project.PROJECT.NOTES, values);
    }

    /**
     * Fetch records that have <code>projectCode IN (values)</code>
     */
    public java.util.List<projectdb.tables.pojos.Project> fetchByProjectcode(String... values) {
        return fetch(projectdb.tables.Project.PROJECT.PROJECTCODE, values);
    }

    /**
     * Fetch records that have <code>projectTypeId IN (values)</code>
     */
    public java.util.List<projectdb.tables.pojos.Project> fetchByProjecttypeid(Integer... values) {
        return fetch(projectdb.tables.Project.PROJECT.PROJECTTYPEID, values);
    }

    /**
     * Fetch records that have <code>requirements IN (values)</code>
     */
    public java.util.List<projectdb.tables.pojos.Project> fetchByRequirements(String... values) {
        return fetch(projectdb.tables.Project.PROJECT.REQUIREMENTS, values);
    }

    /**
     * Fetch records that have <code>startDate IN (values)</code>
     */
    public java.util.List<projectdb.tables.pojos.Project> fetchByStartdate(String... values) {
        return fetch(projectdb.tables.Project.PROJECT.STARTDATE, values);
    }

    /**
     * Fetch records that have <code>statusId IN (values)</code>
     */
    public java.util.List<projectdb.tables.pojos.Project> fetchByStatusid(Integer... values) {
        return fetch(projectdb.tables.Project.PROJECT.STATUSID, values);
    }

    /**
     * Fetch records that have <code>todo IN (values)</code>
     */
    public java.util.List<projectdb.tables.pojos.Project> fetchByTodo(String... values) {
        return fetch(projectdb.tables.Project.PROJECT.TODO, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public projectdb.tables.pojos.Project fetchOneById(Integer value) {
        return fetchOne(projectdb.tables.Project.PROJECT.ID, value);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(projectdb.tables.pojos.Project object) {
        return object.getId();
    }
}
