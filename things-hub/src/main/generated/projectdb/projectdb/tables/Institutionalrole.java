/**
 * This class is generated by jOOQ
 */
package projectdb.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value = {"http://www.jooq.org", "3.3.2"},
        comments = "This class is generated by jOOQ")
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Institutionalrole extends org.jooq.impl.TableImpl<projectdb.tables.records.InstitutionalroleRecord> {

    /**
     * The singleton instance of <code>projectdb.institutionalrole</code>
     */
    public static final projectdb.tables.Institutionalrole INSTITUTIONALROLE = new projectdb.tables.Institutionalrole();
    private static final long serialVersionUID = -644350806;
    /**
     * The column <code>projectdb.institutionalrole.id</code>.
     */
    public final org.jooq.TableField<projectdb.tables.records.InstitutionalroleRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER, this, "");
    /**
     * The column <code>projectdb.institutionalrole.name</code>.
     */
    public final org.jooq.TableField<projectdb.tables.records.InstitutionalroleRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(100), this, "");

    /**
     * Create a <code>projectdb.institutionalrole</code> table reference
     */
    public Institutionalrole() {
        this("institutionalrole", null);
    }

    /**
     * Create an aliased <code>projectdb.institutionalrole</code> table reference
     */
    public Institutionalrole(String alias) {
        this(alias, projectdb.tables.Institutionalrole.INSTITUTIONALROLE);
    }

    private Institutionalrole(String alias, org.jooq.Table<projectdb.tables.records.InstitutionalroleRecord> aliased) {
        this(alias, aliased, null);
    }

    private Institutionalrole(String alias, org.jooq.Table<projectdb.tables.records.InstitutionalroleRecord> aliased, org.jooq.Field<?>[] parameters) {
        super(alias, projectdb.Projectdb.PROJECTDB, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public projectdb.tables.Institutionalrole as(String alias) {
        return new projectdb.tables.Institutionalrole(alias, this);
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<projectdb.tables.records.InstitutionalroleRecord> getRecordType() {
        return projectdb.tables.records.InstitutionalroleRecord.class;
    }

    /**
     * Rename this table
     */
    public projectdb.tables.Institutionalrole rename(String name) {
        return new projectdb.tables.Institutionalrole(name, null);
    }
}
