/**
 * This class is generated by jOOQ
 */
package projectdb.tables.records;

/**
 * This class is generated by jOOQ.
 * <p>
 * Key Performance Indicators (for us).
 */
@javax.annotation.Generated(value = {"http://www.jooq.org", "3.3.2"},
        comments = "This class is generated by jOOQ")
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class KpiRecord extends org.jooq.impl.UpdatableRecordImpl<projectdb.tables.records.KpiRecord> implements org.jooq.Record4<Integer, String, String, String> {

    private static final long serialVersionUID = -1006106138;

    /**
     * Create a detached KpiRecord
     */
    public KpiRecord() {
        super(projectdb.tables.Kpi.KPI);
    }

    /**
     * Create a detached, initialised KpiRecord
     */
    public KpiRecord(Integer id, String type, String title, String measures) {
        super(projectdb.tables.Kpi.KPI);

        setValue(0, id);
        setValue(1, type);
        setValue(2, title);
        setValue(3, measures);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.Field<Integer> field1() {
        return projectdb.tables.Kpi.KPI.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.Field<String> field2() {
        return projectdb.tables.Kpi.KPI.TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.Field<String> field3() {
        return projectdb.tables.Kpi.KPI.TITLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.Field<String> field4() {
        return projectdb.tables.Kpi.KPI.MEASURES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.Row4<Integer, String, String, String> fieldsRow() {
        return (org.jooq.Row4) super.fieldsRow();
    }

    /**
     * Getter for <code>projectdb.kpi.id</code>.
     */
    public Integer getId() {
        return (Integer) getValue(0);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * Getter for <code>projectdb.kpi.measures</code>.
     */
    public String getMeasures() {
        return (String) getValue(3);
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * Getter for <code>projectdb.kpi.title</code>.
     */
    public String getTitle() {
        return (String) getValue(2);
    }

    /**
     * Getter for <code>projectdb.kpi.type</code>.
     */
    public String getType() {
        return (String) getValue(1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.Record1<Integer> key() {
        return (org.jooq.Record1) super.key();
    }

    /**
     * Setter for <code>projectdb.kpi.id</code>.
     */
    public void setId(Integer value) {
        setValue(0, value);
    }

    /**
     * Setter for <code>projectdb.kpi.measures</code>.
     */
    public void setMeasures(String value) {
        setValue(3, value);
    }

    /**
     * Setter for <code>projectdb.kpi.title</code>.
     */
    public void setTitle(String value) {
        setValue(2, value);
    }

    /**
     * Setter for <code>projectdb.kpi.type</code>.
     */
    public void setType(String value) {
        setValue(1, value);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public KpiRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public KpiRecord value2(String value) {
        setType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getTitle();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public KpiRecord value3(String value) {
        setTitle(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getMeasures();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public KpiRecord value4(String value) {
        setMeasures(value);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public KpiRecord values(Integer value1, String value2, String value3, String value4) {
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.Row4<Integer, String, String, String> valuesRow() {
        return (org.jooq.Row4) super.valuesRow();
    }
}
