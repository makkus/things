/**
 * This class is generated by jOOQ
 */
package projectdb.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value = {"http://www.jooq.org", "3.3.2"},
        comments = "This class is generated by jOOQ")
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class ProjectKpiRecord extends org.jooq.impl.UpdatableRecordImpl<projectdb.tables.records.ProjectKpiRecord> implements org.jooq.Record8<Integer, Integer, Integer, String, Integer, Double, String, Integer> {

    private static final long serialVersionUID = 384819680;

    /**
     * Create a detached ProjectKpiRecord
     */
    public ProjectKpiRecord() {
        super(projectdb.tables.ProjectKpi.PROJECT_KPI);
    }

    /**
     * Create a detached, initialised ProjectKpiRecord
     */
    public ProjectKpiRecord(Integer id, Integer kpiid, Integer projectid, String date, Integer adviserid, Double value, String notes, Integer code) {
        super(projectdb.tables.ProjectKpi.PROJECT_KPI);

        setValue(0, id);
        setValue(1, kpiid);
        setValue(2, projectid);
        setValue(3, date);
        setValue(4, adviserid);
        setValue(5, value);
        setValue(6, notes);
        setValue(7, code);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.Field<Integer> field1() {
        return projectdb.tables.ProjectKpi.PROJECT_KPI.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.Field<Integer> field2() {
        return projectdb.tables.ProjectKpi.PROJECT_KPI.KPIID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.Field<Integer> field3() {
        return projectdb.tables.ProjectKpi.PROJECT_KPI.PROJECTID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.Field<String> field4() {
        return projectdb.tables.ProjectKpi.PROJECT_KPI.DATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.Field<Integer> field5() {
        return projectdb.tables.ProjectKpi.PROJECT_KPI.ADVISERID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.Field<Double> field6() {
        return projectdb.tables.ProjectKpi.PROJECT_KPI.VALUE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.Field<String> field7() {
        return projectdb.tables.ProjectKpi.PROJECT_KPI.NOTES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.Field<Integer> field8() {
        return projectdb.tables.ProjectKpi.PROJECT_KPI.CODE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.Row8<Integer, Integer, Integer, String, Integer, Double, String, Integer> fieldsRow() {
        return (org.jooq.Row8) super.fieldsRow();
    }

    /**
     * Getter for <code>projectdb.project_kpi.adviserId</code>.
     */
    public Integer getAdviserid() {
        return (Integer) getValue(4);
    }

    /**
     * Getter for <code>projectdb.project_kpi.code</code>.
     */
    public Integer getCode() {
        return (Integer) getValue(7);
    }

    /**
     * Getter for <code>projectdb.project_kpi.date</code>.
     */
    public String getDate() {
        return (String) getValue(3);
    }

    /**
     * Getter for <code>projectdb.project_kpi.id</code>.
     */
    public Integer getId() {
        return (Integer) getValue(0);
    }

    /**
     * Getter for <code>projectdb.project_kpi.kpiId</code>.
     */
    public Integer getKpiid() {
        return (Integer) getValue(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * Getter for <code>projectdb.project_kpi.notes</code>.
     */
    public String getNotes() {
        return (String) getValue(6);
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    /**
     * Getter for <code>projectdb.project_kpi.projectId</code>.
     */
    public Integer getProjectid() {
        return (Integer) getValue(2);
    }

    /**
     * Getter for <code>projectdb.project_kpi.value</code>.
     */
    public Double getValue() {
        return (Double) getValue(5);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.Record1<Integer> key() {
        return (org.jooq.Record1) super.key();
    }

    /**
     * Setter for <code>projectdb.project_kpi.adviserId</code>.
     */
    public void setAdviserid(Integer value) {
        setValue(4, value);
    }

    /**
     * Setter for <code>projectdb.project_kpi.code</code>.
     */
    public void setCode(Integer value) {
        setValue(7, value);
    }

    /**
     * Setter for <code>projectdb.project_kpi.date</code>.
     */
    public void setDate(String value) {
        setValue(3, value);
    }

    /**
     * Setter for <code>projectdb.project_kpi.id</code>.
     */
    public void setId(Integer value) {
        setValue(0, value);
    }

    /**
     * Setter for <code>projectdb.project_kpi.kpiId</code>.
     */
    public void setKpiid(Integer value) {
        setValue(1, value);
    }

    /**
     * Setter for <code>projectdb.project_kpi.notes</code>.
     */
    public void setNotes(String value) {
        setValue(6, value);
    }

    /**
     * Setter for <code>projectdb.project_kpi.projectId</code>.
     */
    public void setProjectid(Integer value) {
        setValue(2, value);
    }

    /**
     * Setter for <code>projectdb.project_kpi.value</code>.
     */
    public void setValue(Double value) {
        setValue(5, value);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectKpiRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getKpiid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectKpiRecord value2(Integer value) {
        setKpiid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getProjectid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectKpiRecord value3(Integer value) {
        setProjectid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getDate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectKpiRecord value4(String value) {
        setDate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getAdviserid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectKpiRecord value5(Integer value) {
        setAdviserid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Double value6() {
        return getValue();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectKpiRecord value6(Double value) {
        setValue(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value7() {
        return getNotes();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectKpiRecord value7(String value) {
        setNotes(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value8() {
        return getCode();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectKpiRecord value8(Integer value) {
        setCode(value);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public ProjectKpiRecord values(Integer value1, Integer value2, Integer value3, String value4, Integer value5, Double value6, String value7, Integer value8) {
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.Row8<Integer, Integer, Integer, String, Integer, Double, String, Integer> valuesRow() {
        return (org.jooq.Row8) super.valuesRow();
    }
}
