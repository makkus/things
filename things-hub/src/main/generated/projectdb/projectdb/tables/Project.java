/**
 * This class is generated by jOOQ
 */
package projectdb.tables;

/**
 * This class is generated by jOOQ.
 * <p>
 * Holds the main information about projects
 */
@javax.annotation.Generated(value = {"http://www.jooq.org", "3.3.2"},
        comments = "This class is generated by jOOQ")
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Project extends org.jooq.impl.TableImpl<projectdb.tables.records.ProjectRecord> {

    /**
     * The singleton instance of <code>projectdb.project</code>
     */
    public static final projectdb.tables.Project PROJECT = new projectdb.tables.Project();
    private static final long serialVersionUID = 1895435556;
    /**
     * The column <code>projectdb.project.description</code>.
     */
    public final org.jooq.TableField<projectdb.tables.records.ProjectRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB.length(65535).nullable(false), this, "");
    /**
     * The column <code>projectdb.project.endDate</code>.
     */
    public final org.jooq.TableField<projectdb.tables.records.ProjectRecord, String> ENDDATE = createField("endDate", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false).defaulted(true), this, "");
    /**
     * The column <code>projectdb.project.hostInstitution</code>.
     */
    public final org.jooq.TableField<projectdb.tables.records.ProjectRecord, String> HOSTINSTITUTION = createField("hostInstitution", org.jooq.impl.SQLDataType.VARCHAR.length(200).nullable(false).defaulted(true), this, "");
    /**
     * The column <code>projectdb.project.id</code>.
     */
    public final org.jooq.TableField<projectdb.tables.records.ProjectRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");
    /**
     * The column <code>projectdb.project.lastModified</code>. A unix timestamp indicating the last time the project was edited
     */
    public final org.jooq.TableField<projectdb.tables.records.ProjectRecord, java.sql.Timestamp> LASTMODIFIED = createField("lastModified", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "A unix timestamp indicating the last time the project was edited");
    /**
     * The column <code>projectdb.project.name</code>.
     */
    public final org.jooq.TableField<projectdb.tables.records.ProjectRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(200).nullable(false).defaulted(true), this, "");
    /**
     * The column <code>projectdb.project.nextFollowUpDate</code>.
     */
    public final org.jooq.TableField<projectdb.tables.records.ProjectRecord, String> NEXTFOLLOWUPDATE = createField("nextFollowUpDate", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false).defaulted(true), this, "");
    /**
     * The column <code>projectdb.project.nextReviewDate</code>.
     */
    public final org.jooq.TableField<projectdb.tables.records.ProjectRecord, String> NEXTREVIEWDATE = createField("nextReviewDate", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false).defaulted(true), this, "");
    /**
     * The column <code>projectdb.project.notes</code>.
     */
    public final org.jooq.TableField<projectdb.tables.records.ProjectRecord, String> NOTES = createField("notes", org.jooq.impl.SQLDataType.CLOB.length(65535).nullable(false), this, "");
    /**
     * The column <code>projectdb.project.projectCode</code>.
     */
    public final org.jooq.TableField<projectdb.tables.records.ProjectRecord, String> PROJECTCODE = createField("projectCode", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false).defaulted(true), this, "");
    /**
     * The column <code>projectdb.project.projectTypeId</code>.
     */
    public final org.jooq.TableField<projectdb.tables.records.ProjectRecord, Integer> PROJECTTYPEID = createField("projectTypeId", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");
    /**
     * The column <code>projectdb.project.requirements</code>.
     */
    public final org.jooq.TableField<projectdb.tables.records.ProjectRecord, String> REQUIREMENTS = createField("requirements", org.jooq.impl.SQLDataType.CLOB.length(65535).nullable(false), this, "");
    /**
     * The column <code>projectdb.project.startDate</code>.
     */
    public final org.jooq.TableField<projectdb.tables.records.ProjectRecord, String> STARTDATE = createField("startDate", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false).defaulted(true), this, "");
    /**
     * The column <code>projectdb.project.statusId</code>.
     */
    public final org.jooq.TableField<projectdb.tables.records.ProjectRecord, Integer> STATUSID = createField("statusId", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");
    /**
     * The column <code>projectdb.project.todo</code>.
     */
    public final org.jooq.TableField<projectdb.tables.records.ProjectRecord, String> TODO = createField("todo", org.jooq.impl.SQLDataType.CLOB.length(65535).nullable(false), this, "");

    /**
     * Create a <code>projectdb.project</code> table reference
     */
    public Project() {
        this("project", null);
    }

    /**
     * Create an aliased <code>projectdb.project</code> table reference
     */
    public Project(String alias) {
        this(alias, projectdb.tables.Project.PROJECT);
    }

    private Project(String alias, org.jooq.Table<projectdb.tables.records.ProjectRecord> aliased) {
        this(alias, aliased, null);
    }

    private Project(String alias, org.jooq.Table<projectdb.tables.records.ProjectRecord> aliased, org.jooq.Field<?>[] parameters) {
        super(alias, projectdb.Projectdb.PROJECTDB, aliased, parameters, "Holds the main information about projects");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public projectdb.tables.Project as(String alias) {
        return new projectdb.tables.Project(alias, this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.Identity<projectdb.tables.records.ProjectRecord, Integer> getIdentity() {
        return projectdb.Keys.IDENTITY_PROJECT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public java.util.List<org.jooq.UniqueKey<projectdb.tables.records.ProjectRecord>> getKeys() {
        return java.util.Arrays.<org.jooq.UniqueKey<projectdb.tables.records.ProjectRecord>>asList(projectdb.Keys.KEY_PROJECT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public org.jooq.UniqueKey<projectdb.tables.records.ProjectRecord> getPrimaryKey() {
        return projectdb.Keys.KEY_PROJECT_PRIMARY;
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<projectdb.tables.records.ProjectRecord> getRecordType() {
        return projectdb.tables.records.ProjectRecord.class;
    }

    /**
     * Rename this table
     */
    public projectdb.tables.Project rename(String name) {
        return new projectdb.tables.Project(name, null);
    }
}
