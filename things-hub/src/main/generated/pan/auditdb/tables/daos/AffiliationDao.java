/**
 * This class is generated by jOOQ
 */
package pan.auditdb.tables.daos;

/**
 * This class is generated by jOOQ.
 * <p>
 * InnoDB free: 8458240 kB
 */
@javax.annotation.Generated(value = {"http://www.jooq.org", "3.3.2"},
        comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({"all", "unchecked", "rawtypes"})
public class AffiliationDao extends org.jooq.impl.DAOImpl<pan.auditdb.tables.records.AffiliationRecord, pan.auditdb.tables.pojos.Affiliation, java.lang.String> {

    /**
     * Create a new AffiliationDao without any configuration
     */
    public AffiliationDao() {
        super(pan.auditdb.tables.Affiliation.AFFILIATION, pan.auditdb.tables.pojos.Affiliation.class);
    }

    /**
     * Create a new AffiliationDao with an attached configuration
     */
    public AffiliationDao(org.jooq.Configuration configuration) {
        super(pan.auditdb.tables.Affiliation.AFFILIATION, pan.auditdb.tables.pojos.Affiliation.class, configuration);
    }

    /**
     * Fetch records that have <code>code IN (values)</code>
     */
    public java.util.List<pan.auditdb.tables.pojos.Affiliation> fetchByCode(java.lang.String... values) {
        return fetch(pan.auditdb.tables.Affiliation.AFFILIATION.CODE, values);
    }

    /**
     * Fetch records that have <code>dept1 IN (values)</code>
     */
    public java.util.List<pan.auditdb.tables.pojos.Affiliation> fetchByDept1(java.lang.String... values) {
        return fetch(pan.auditdb.tables.Affiliation.AFFILIATION.DEPT1, values);
    }

    /**
     * Fetch records that have <code>dept2 IN (values)</code>
     */
    public java.util.List<pan.auditdb.tables.pojos.Affiliation> fetchByDept2(java.lang.String... values) {
        return fetch(pan.auditdb.tables.Affiliation.AFFILIATION.DEPT2, values);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public java.util.List<pan.auditdb.tables.pojos.Affiliation> fetchById(java.lang.String... values) {
        return fetch(pan.auditdb.tables.Affiliation.AFFILIATION.ID, values);
    }

    /**
     * Fetch records that have <code>note IN (values)</code>
     */
    public java.util.List<pan.auditdb.tables.pojos.Affiliation> fetchByNote(java.lang.String... values) {
        return fetch(pan.auditdb.tables.Affiliation.AFFILIATION.NOTE, values);
    }

    /**
     * Fetch records that have <code>role IN (values)</code>
     */
    public java.util.List<pan.auditdb.tables.pojos.Affiliation> fetchByRole(java.lang.String... values) {
        return fetch(pan.auditdb.tables.Affiliation.AFFILIATION.ROLE, values);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public java.util.List<pan.auditdb.tables.pojos.Affiliation> fetchByStatus(java.lang.String... values) {
        return fetch(pan.auditdb.tables.Affiliation.AFFILIATION.STATUS, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public pan.auditdb.tables.pojos.Affiliation fetchOneById(java.lang.String value) {
        return fetchOne(pan.auditdb.tables.Affiliation.AFFILIATION.ID, value);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected java.lang.String getId(pan.auditdb.tables.pojos.Affiliation object) {
        return object.getId();
    }
}
